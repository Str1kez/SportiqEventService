version: "3"

services:
  db:
    image: postgres:15-alpine
    container_name: event_service_db
    restart: unless-stopped
    env_file: .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - "data:/var/lib/postgresql/data"
    ports:
      - 5434:5432
  rabbitmq:
    image: rabbitmq:3.11-management-alpine
    hostname: rabbitmq
    restart: always
    env_file: .env
    container_name: rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - "rabbitmq:/var/lib/rabbitmq"
    ports:
      - 15672:15672
      - 5672:5672
  cache:
    image: redis:7-alpine
    container_name: event_service_cache
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 5
    volumes:
      - "cache:/data"
    ports:
      - 6380:6379
  event_service:
    image: event-service:latest
    build:
      context: .
      dockerfile: build/service/Dockerfile
    container_name: event_service
    restart: unless-stopped
    env_file: .env
    ports:
      - "${APP_PORT}:${APP_PORT}"
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

volumes:
  data:
  cache:
  rabbitmq:

networks:
  default:
    name: sportiq
    external: true
