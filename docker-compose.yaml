version: "3"

services:
  db:
    image: postgres:15-alpine
    container_name: event_service_db
    restart: unless-stopped
    env_file: .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - "data:/var/lib/postgresql/data"
    ports:
      - 5433:5432
  cache:
    image: redis:7-alpine
    container_name: event_service_cache
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 5
    volumes:
      - "cache:/data"
    ports:
      - 6379:6379
  project:
    image: project:latest
    build:
      context: .
      dockerfile: build/service/Dockerfile
    container_name: project
    restart: unless-stopped
    env_file: .env
    ports:
      - "8000:${APP_PORT}"
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy

volumes:
  data:
  cache:

networks:
  default:
    name: sportiq
    external: true
